#!/usr/bin/zsh
# Usage: cdup [DIRNAME]
# Author: Weston Ruter (@westonruter) <http://weston.ruter.net/>
# URL: https://github.com/westonruter/misc-cli-tools/blob/master/cdup
# See also: https://github.com/westonruter/misc-cli-tools/blob/master/cddown
#
# Bash shortcut function to cd you to ancestor directory named as first argument.
# If DIRNAME is not supplied, then .. is used.
# Stop having to cd ../../../..
# Also supports substring matches for ancestor directory names.
# Use `cd -` to undo, to restore old working directory.
# Use aliases for common directories, like: alias docroot="cdup docroot".
# Provide a '...' alias to this for great justice.
# Add function to your ~/.profile
# @todo Add bash tab completion
#
# Example:
# $ pwd
# > /var/www/html/example.com/docroot/long/path/to/something
# $ cdup html
# $ pwd
# > /var/www/html
# $ cd -
# $ pwd
# > /var/www/html/example.com/docroot/long/path/to/something
# $ cdup example
# $ pwd
# > /var/www/html/example.com

function cdup {
  if [[ $# -eq 0 ]]; then
    cd ..
    return 0
  fi

  dir="$1"
  old="${PWD}"
  # Try matching the full segment in path name
  new=`perl -pe "s{(.*/\Q$dir\E)(?=/|$).*?$}{\1};" <<< $old`

  # If failed, try partial match of segment
  if [[ "$old" == "$new" ]]; then
    new=`perl -pe "s{(.*/[^/]*?\Q$dir\E[^/]*?)(?=/|$).*?$}{\1}" <<< $old`
  fi

  # No replacements done, so we failed
  if [[ "$old" == "$new" ]]; then
    echo "Can't find '$dir' among ancestor directories ($old == $new)." 1>&2
    return 1
  fi

  cd $new
  return 0
}

function _cdup_complete {
  reply=()
  cnt=${#${(ps:/:)${PWD}}}
  if [[ $cnt -lt 2 ]]; then
    return 0
  fi
  for i in {2..$cnt}; do
    d=$(pwd|cut -d'/' -f$i)
    reply+=$d
  done
}
compctl -K _cdup_complete cdup

function cdgit {
	root=$(git rev-parse --show-superproject-working-tree 2>/dev/null)
	if [[ -z "$root" ]]; then
		root=$(git rev-parse --show-toplevel 2>/dev/null)
	fi
	if [[ -z "$root" ]]; then
		echo "Not in a git directory" 1>&2
		return 1
	fi

	cd $root
	return 0
}
